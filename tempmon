#!/bin/bash

# Define color codes
RED='\033[1;31m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
WHITE='\033[1;37m'
RESET='\033[0m'  # Reset color

# Function to classify and color temperature levels
classify_temp() {
    temp=$1
    low=$2
    high=$3

    # Handle missing values
    if [[ "$temp" == "Not Available" ]]; then
        echo -e "${WHITE}Not Available${RESET}"
        return
    fi

    # Convert temp to float
    if [[ $(echo "$temp < $low" | bc -l) -eq 1 ]]; then
        echo -e "${BLUE}LOW${RESET}"
    elif [[ $(echo "$temp >= $low && $temp <= $high" | bc -l) -eq 1 ]]; then
        echo -e "${YELLOW}MEDIUM${RESET}"
    else
        echo -e "${RED}HIGH${RESET}"
    fi
}

# Extract CPU temperature (Fixing extra characters issue)
cpu_temp=$(sensors | grep 'Package id 0' | awk '{print $4}' | tr -d '+Â°C')

# Extract NVMe SSD temperature
nvme_temp=$(sensors | grep 'Composite' | awk '{print $2}' | tr -d '+Â°C')

# Extract GPU temperature
gpu_temp=$(nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader)

# Extract PCH temperature safely
pch_temp=$(sensors | grep -A 1 'pch_cometlake-virtual-0' | grep 'temp1' | awk '{print $2}' | tr -d '+Â°C')
pch_temp=${pch_temp:-"Not Available"}

# Extract Wi-Fi temperature safely
wifi_temp=$(sensors | grep -A 1 'iwlwifi' | grep 'temp1' | awk '{print $2}' | tr -d '+Â°C')
wifi_temp=${wifi_temp:-"Not Available"}

# Classify temperatures with colors
cpu_status=$(classify_temp "$cpu_temp" 60 85)
nvme_status=$(classify_temp "$nvme_temp" 60 80)
gpu_status=$(classify_temp "$gpu_temp" 75 90)
pch_status=$(classify_temp "$pch_temp" 70 90)
wifi_status=$(classify_temp "$wifi_temp" 60 85)

# Print output in Linux-style format with colors
echo "===================================="
echo "ðŸ“Š SYSTEM TEMPERATURE MONITOR"
echo "===================================="
echo -e "ðŸ”¹ CPU Temperature: $cpu_tempÂ°C ($cpu_status)  (Safe: <60Â°C, High: >85Â°C)"
echo -e "ðŸ”¹ PCH Temperature: $pch_tempÂ°C ($pch_status)  (Safe: <70Â°C, High: >90Â°C)"
echo -e "ðŸ”¹ NVMe SSD Temperature: $nvme_tempÂ°C ($nvme_status)  (Safe: <60Â°C, High: >80Â°C)"
echo -e "ðŸ”¹ Wi-Fi Module Temperature: $wifi_tempÂ°C ($wifi_status)  (Safe: <60Â°C, High: >85Â°C)"
echo -e "ðŸ”¹ GPU Temperature: $gpu_tempÂ°C ($gpu_status)  (Safe: <75Â°C, High: >90Â°C)"
echo "===================================="
